load("~/sc_mixology/data/sincell_with_class.RData")
packages.install("BiocLite")
install.packages("BiocLite")
install.packages("BiocManager")
BiocManager::install("SingleCellExperiment")
install.packages('BiocManager')
install.packages('tidyverse')
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor'))
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor'))
install.packages('Rhdf5lib')
BiocManager::install('Rhdf5lib')
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor'))
BiocManager::install('HDF5Array')
url<-"https://bioconductor.org/packages/3.8/bioc/src/contrib/HDF5Array_1.10.1.tar.gz"
install.packages(url,repos=NULL,type="source")
BiocManager::install("minfi")
url<-"https://bioconductor.org/packages/3.8/bioc/src/contrib/HDF5Array_1.10.1.tar.gz"
install.packages(url,repos=NULL,type="source")
BiocManager::install("HDF5Array")
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor'))
install.packages("devtools")
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
install.packages("igraph")
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
BiocManager::install('Biobase')
Biobase
BiocManager::install('batchelor')
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
LC_CTYPE = "C"
devtools::install_github('cole-trapnell-lab/monocle3')
rm(list=ls())
devtools::install_github(''cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_local('/tmp/RtmpIiS7N2/file35f6123b7a2e1/leidenbase_0.1.0.tar.gz')
sys.setlocale("LC_ALL","English")
Sys.setlocale("LC_ALL","English")
devtools::install_local('/tmp/RtmpIiS7N2/file35f6123b7a2e1/leidenbase_0.1.0.tar.gz')
BiocManager::install('CellBench')
BiocManager::install('scran')
library(dplyr)
library(Seurat)
library(SingleCellExperiment)
setwd("~/advanced-bioinformatics/")
load("data/sincell_with_class.RData")
load("data/sincell_with_class_5cl.RData")
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_5cl <- sce_sc_10x_5cl_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
rm(sce_sc_10x_qc, sce_sc_10x_5cl_qc) # Save memory
# Pipe the CELLseq2 datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_CELseq2_3cl <- sce_sc_CELseq2_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
seurat_CELseq2_5cl_p1 <- sc_Celseq2_5cl_p1 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
seurat_CELseq2_5cl_p2 <- sc_Celseq2_5cl_p2 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
seurat_CELseq2_5cl_p3 <- sc_Celseq2_5cl_p3 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
rm(sce_sc_CELseq2_qc, sc_Celseq2_5cl_p1, sc_Celseq2_5cl_p2, sc_Celseq2_5cl_p3) # Save memory
# Pipe the Dropseq datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_Dropseq_3cl <- sce_sc_Dropseq_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
rm(sce_sc_Dropseq_qc) # Save memory
# PCA/t-SNE plots for 10x
pca_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "pca", group.by = "cell_line")
pca_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "pca", group.by = "cell_line")
tsne_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "tsne", group.by = "cell_line")
tsne_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "tsne", group.by = "cell_line")
# UMAP plots for 10x
umap_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "umap", group.by = "cell_line")
umap_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "umap", group.by = "cell_line")
# PCA/t-SNE plots for CELseq2
pca_plot_CELseq2_3cl <- DimPlot(seurat_CELseq2_3cl, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p1 <- DimPlot(seurat_CELseq2_5cl_p1, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p2 <- DimPlot(seurat_CELseq2_5cl_p2, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p3 <- DimPlot(seurat_CELseq2_5cl_p3, reduction = "pca", group.by = "cell_line")
tsne_plot_CELseq2_3cl <- DimPlot(seurat_CELseq2_3cl, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p1 <- DimPlot(seurat_CELseq2_5cl_p1, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p2 <- DimPlot(seurat_CELseq2_5cl_p2, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p3 <- DimPlot(seurat_CELseq2_5cl_p3, reduction = "tsne", group.by = "cell_line")
pca_plot_Dropseq <- DimPlot(seurat_Dropseq_3cl, reduction = "pca", group.by = "cell_line")
tsne_plot_Dropseq <- DimPlot(seurat_Dropseq_3cl, reduction = "tsne", group.by = "cell_line")
# 10x samples
png("output/seurat/seurat-pca-3cl-10x.png", height = 1000, width = 1000)
pca_plot_10x_3cl # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-10x.png", height = 1000, width = 1000)
tsne_plot_10x_3cl # 3-cell t-SNE
dev.off()
png("output/seurat/seurat-umap-3cl-10x.png", height = 1000, width = 1000)
umap_plot_10x_3cl # 3-cell UMAP
dev.off()
png("output/seurat/seurat-pca-5cl-10x.png", height = 1000, width = 1000)
pca_plot_10x_5cl # 5-cell PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-10x.png", height = 1000, width = 1000)
tsne_plot_10x_5cl # 5-cell t-SNE
dev.off()
png("output/seurat/seurat-umap-5cl-10x.png", height = 1000, width = 1000)
umap_plot_10x_5cl # 5-cell UMAP
dev.off()
# CELseq2 samples
png("output/seurat/seurat-pca-3cl-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_3cl # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_3cl # 3-cell t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p1-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p1 # 5-cell p1 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p1-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p1 # 5-cell p1 t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p2-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p2 # 5-cell p2 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p2-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p2 # 5-cell p2 t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p3-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p3 # 5-cell p3 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p3-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p3 # 5-cell p3 t-SNE
dev.off()
# Dropseq samples
png("output/seurat/seurat-pca-3cl-Dropseq.png", height = 1000, width = 1000)
pca_plot_Dropseq # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-Dropseq.png", height = 1000, width = 1000)
tsne_plot_Dropseq # 3-cell t-SNE
dev.off()
# Pipe the CELLseq2 datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_CELseq2_3cl <- sce_sc_CELseq2_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
load("data/sincell_with_class.RData")
# Pipe the CELLseq2 datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_CELseq2_3cl <- sce_sc_CELseq2_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUmap(dims = 1:5)
library(dplyr)
library(Seurat)
library(SingleCellExperiment)
library(dplyr)
library(Seurat)
library(SingleCellExperiment)
setwd("~/advanced-bioinformatics/")
load("data/sincell_with_class.RData")
load("data/sincell_with_class_5cl.RData")
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_5cl <- sce_sc_10x_5cl_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
rm(sce_sc_10x_qc, sce_sc_10x_5cl_qc) # Save memory
# Pipe the CELLseq2 datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_CELseq2_3cl <- sce_sc_CELseq2_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
seurat_CELseq2_5cl_p1 <- sc_Celseq2_5cl_p1 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
seurat_CELseq2_5cl_p2 <- sc_Celseq2_5cl_p2 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
seurat_CELseq2_5cl_p3 <- sc_Celseq2_5cl_p3 %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
rm(sce_sc_CELseq2_qc, sc_Celseq2_5cl_p1, sc_Celseq2_5cl_p2, sc_Celseq2_5cl_p3) # Save memory
# Pipe the Dropseq datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_Dropseq_3cl <- sce_sc_Dropseq_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
rm(sce_sc_Dropseq_qc) # Save memory
# PCA/t-SNE plots for 10x
pca_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "pca", group.by = "cell_line")
pca_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "pca", group.by = "cell_line")
tsne_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "tsne", group.by = "cell_line")
tsne_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "tsne", group.by = "cell_line")
# UMAP plots for 10x
umap_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "umap", group.by = "cell_line")
umap_plot_10x_5cl <- DimPlot(seurat_10x_5cl, reduction = "umap", group.by = "cell_line")
# PCA/t-SNE plots for CELseq2
pca_plot_CELseq2_3cl <- DimPlot(seurat_CELseq2_3cl, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p1 <- DimPlot(seurat_CELseq2_5cl_p1, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p2 <- DimPlot(seurat_CELseq2_5cl_p2, reduction = "pca", group.by = "cell_line")
pca_plot_CELseq2_5cl_p3 <- DimPlot(seurat_CELseq2_5cl_p3, reduction = "pca", group.by = "cell_line")
tsne_plot_CELseq2_3cl <- DimPlot(seurat_CELseq2_3cl, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p1 <- DimPlot(seurat_CELseq2_5cl_p1, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p2 <- DimPlot(seurat_CELseq2_5cl_p2, reduction = "tsne", group.by = "cell_line")
tsne_plot_CELseq2_5cl_p3 <- DimPlot(seurat_CELseq2_5cl_p3, reduction = "tsne", group.by = "cell_line")
pca_plot_Dropseq <- DimPlot(seurat_Dropseq_3cl, reduction = "pca", group.by = "cell_line")
tsne_plot_Dropseq <- DimPlot(seurat_Dropseq_3cl, reduction = "tsne", group.by = "cell_line")
# 10x samples
png("output/seurat/seurat-pca-3cl-10x.png", height = 1000, width = 1000)
pca_plot_10x_3cl # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-10x.png", height = 1000, width = 1000)
tsne_plot_10x_3cl # 3-cell t-SNE
dev.off()
png("output/seurat/seurat-umap-3cl-10x.png", height = 1000, width = 1000)
umap_plot_10x_3cl # 3-cell UMAP
dev.off()
png("output/seurat/seurat-pca-5cl-10x.png", height = 1000, width = 1000)
pca_plot_10x_5cl # 5-cell PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-10x.png", height = 1000, width = 1000)
tsne_plot_10x_5cl # 5-cell t-SNE
dev.off()
png("output/seurat/seurat-umap-5cl-10x.png", height = 1000, width = 1000)
umap_plot_10x_5cl # 5-cell UMAP
dev.off()
# CELseq2 samples
png("output/seurat/seurat-pca-3cl-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_3cl # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_3cl # 3-cell t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p1-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p1 # 5-cell p1 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p1-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p1 # 5-cell p1 t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p2-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p2 # 5-cell p2 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p2-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p2 # 5-cell p2 t-SNE
dev.off()
png("output/seurat/seurat-pca-5cl-p3-CELseq2.png", height = 1000, width = 1000)
pca_plot_CELseq2_5cl_p3 # 5-cell p3 PCA
dev.off()
png("output/seurat/seurat-tsne-5cl-p3-CELseq2.png", height = 1000, width = 1000)
tsne_plot_CELseq2_5cl_p3 # 5-cell p3 t-SNE
dev.off()
# Dropseq samples
png("output/seurat/seurat-pca-3cl-Dropseq.png", height = 1000, width = 1000)
pca_plot_Dropseq # 3-cell PCA
dev.off()
png("output/seurat/seurat-tsne-3cl-Dropseq.png", height = 1000, width = 1000)
tsne_plot_Dropseq # 3-cell t-SNE
dev.off()
seurat_10x_3cl$nFeature_RNA
View(seurat_10x_3cl)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5) %>% FindClusters(reduction.type = "pca", dims.use = 1:5)
load("data/sincell_with_class.RData")
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5) %>% FindClusters(reduction.type = "pca", dims.use = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5) %>%
FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5) %>%
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_5cl <- sce_sc_10x_5cl_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
load("data/sincell_with_class.RData")
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5) %>%
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_5cl <- sce_sc_10x_5cl_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5) %>%
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_5cl <- sce_sc_10x_5cl_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% RunTSNE %>% RunUMAP(dims = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5)
# PCA/t-SNE plots for 10x
pca_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "pca", group.by = "cell_line")
pca_plot_10x_3cl
seurat_10x_3cl
seurat_10x_3cl$seurat_clusters
summary(seurat_10x_3cl$seurat_clusters)
View(seurat_10x_3cl)
seurat_10x_3cl$seurat_clusters
head(seurat_10x_3cl$seurat_clusters)
summary(seurat_10x_3cl$seurat_clusters)
tsne_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "tsne", group.by = "cell_line")
tsne_plot_10x_3cl
# UMAP plots for 10x
umap_plot_10x_3cl <- DimPlot(seurat_10x_3cl, reduction = "umap", group.by = "cell_line")
umap_plot_10x_3cl
seurat_10x_3cl$seurat_clusters
summary(seurat_10x_3cl$seurat_clusters)
head(seurat_10x_3cl$seurat_clusters)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca") %>%
RunTSNE %>% RunUMAP(dims = 1:5)
head(seurat_10x_3cl$seurat_clusters)
summary(seurat_10x_3cl$seurat_clusters)
head(seurat_10x_3cl$seurat_clusters)
load("data/sincell_with_class.RData")
seurat_10x_3cl$RNA_snn_res.0.8
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5)
seurat_10x_3cl$seurat_clusters
seurat_10x_3cl$demuxlet_cls
test <- as.factor(seurat_10x_3cl$seurat_clusters)
summary(test)
seurat_10x_3cl$ideent
seurat_10x_3cl$ident
seurat_10x_3cl@ident
seurat_10x_3cl@active.ident
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5)
seurat_10x_3cl$clustering_res <- as.factor(seurat_10x_3cl@active.ident)
seurat_10x_3cl$clustering_res
install.packages('mclust')
library(mclust)
ARI_matric = function(sce){
if(!("clustering_res" %in% colnames(colData(sce)))){
return(NA)
}
if ("group" %in% colnames(colData(sce))){
ari_val = adjustedRandIndex(sce$group, sce$clustering_res)
}else{
ari_val = adjustedRandIndex(sce$cell_line_demuxlet, sce$clustering_res)
}
return(ari_val)
}
ARI_matric(seurat_10x_3cl)
colData(seurat_10x_3cl)$clustering_res <- as.factor(seurat_10x_3cl@active.ident)
library(scran)
library(cluster)
library(scater)
library(scran)
library(scater)
colData(seurat_10x_3cl)$clustering_res <- as.factor(seurat_10x_3cl@active.ident)
# Pipe the 10x datasets through the regular PCA/t-SNE pipeline in Seurat
seurat_10x_3cl <- sce_sc_10x_qc %>%
as.Seurat(counts = "counts", data = "logcounts") %>%
FindVariableFeatures() %>% ScaleData() %>% RunPCA() %>% FindNeighbors() %>% FindClusters(reduction.type = "pca", dims.use = 1:5) %>%
RunTSNE %>% RunUMAP(dims = 1:5)
colData(sce_sc_10x_qc)$clustering_res <- as.factor(seurat_10x_3cl@active.ident)
ARI_matric(sce_sc_10x_qc)
pca_plot_10x_3cl
load("data/sincell_with_class_5cl.RData")
